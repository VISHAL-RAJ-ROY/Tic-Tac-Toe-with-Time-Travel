{"version":3,"sources":["index.js"],"names":["classNames","require","Square","props","buttonClasses","square","whiteBack","isN","yellowBack","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","isPaint","_this","this","squares","n","numRows","m","numCols","winData","colors","Array","fill","items","insideItems","j","num","push","renderSquare","React","Component","Game","_this2","Object","C_Users_JB_Scholar_2017_Desktop_Gawd_webdev_Gawd_Tic_Tac_Toe_wtih_Time_Travel_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_JB_Scholar_2017_Desktop_Gawd_webdev_Gawd_Tic_Tac_Toe_wtih_Time_Travel_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_JB_Scholar_2017_Desktop_Gawd_webdev_Gawd_Tic_Tac_Toe_wtih_Time_Travel_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","clickedAt","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this3","current","win","winner","winPlaces","moves","map","move","desc","parseInt","key","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","jumpTo","react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_10___default","Heading","st","handleClick","lines","_lines$i","C_Users_JB_Scholar_2017_Desktop_Gawd_webdev_Gawd_Tic_Tac_Toe_wtih_Time_Travel_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6fb645c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport './index.css';\r\nvar classNames = require('classnames');\r\n\r\nfunction Square(props) {\r\n    var buttonClasses = classNames({\r\n        'square':true,\r\n        'whiteBack':!props.isN,\r\n        'yellowBack':props.isN\r\n    });\r\n    return (\r\n      <button className = {buttonClasses} onClick={props.onClick}>\r\n        {props.value}  \r\n      </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    \r\n    renderSquare(i,isPaint) {\r\n      return (\r\n        <Square \r\n          value = {this.props.squares[i]} \r\n          onClick = {()=>this.props.onClick(i)}\r\n          isN = {isPaint}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {  \r\n        var n = this.props.numRows;\r\n        var m = this.props.numCols;\r\n        var winData = this.props.winData;\r\n        var colors = Array(9).fill(false);\r\n        if( winData[0] ) {\r\n            for( let i = 0; i < 3; i++ ) {\r\n                colors[winData[1][i]] = true;\r\n            }\r\n        }\r\n        var self = this;\r\n        const items = [];\r\n        for( let i = 0; i < n; i++ ) {\r\n            const insideItems = [];\r\n            for( let j = 0; j < m; j++ ) {\r\n                var num = i*3+j;\r\n                insideItems.push(self.renderSquare(num, winData[0] && colors[num]));\r\n            }\r\n            items.push(\r\n                <div className = \"board-row\">\r\n                    {insideItems}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className = \"mainDiv\">\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    \r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0,this.state.stepNumber+1);\r\n      const curr = history[history.length-1];\r\n      const squares = curr.squares.slice();\r\n      if( calculateWinner(squares)[0] || squares[i] ) return;\r\n      squares[i] = (this.state.xIsNext ? 'X' : 'O');\r\n      this.setState({history:history.concat([{squares:squares,clickedAt:i}]), stepNumber:history.length, xIsNext:!this.state.xIsNext});\r\n    }\r\n    \r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber:step,\r\n        xIsNext: step%2?false:true,\r\n      });\r\n    }\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history:\r\n        [\r\n          {\r\n            squares:Array(9).fill(null),\r\n            clickedAt:-1,\r\n          }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext:true,\r\n      }\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const win = calculateWinner(current.squares);\r\n      var winner = win[0];\r\n      var winPlaces = null;\r\n      const moves = history.map( (step,move) => {\r\n        const desc = move ? \"Go to move #\"+move+' done at cell ['+parseInt(step.clickedAt/3)+','+step.clickedAt%3+']' : \"Go to Start\";\r\n        return (\r\n          <li key={move}>\r\n            {/* <button onClick={()=>this.jumpTo(move)}>{desc}</button> */}\r\n            {/* <Button variant=\"outline-primary\" >{desc}</Button> */}\r\n            <Button variant=\"dark\" onClick={()=>this.jumpTo(move)}>{desc}</Button>\r\n          </li>\r\n        );\r\n      }\r\n      );\r\n      \r\n      let status;\r\n      if( winner ) {\r\n        // status = 'Winner : ' + winner;\r\n        status = <Alert variant=\"danger\" key={this.state.stepNumber}> \r\n            <Alert.Heading>{winner+' is the Winner!!!'}</Alert.Heading>\r\n        </Alert>\r\n        winPlaces = win[1];\r\n      } else if( this.state.stepNumber < 9 ) {\r\n        // status = 'Next player: '+(this.state.xIsNext ? 'X' : 'O');\r\n        var st = this.state.xIsNext ? 'warning': 'secondary';\r\n        status = <Alert variant={st} key={this.state.stepNumber}>\r\n            <Alert.Heading>{'Next player: '+(this.state.xIsNext ? 'X' : 'O')}</Alert.Heading>\r\n        </Alert>\r\n      } else {\r\n        //   status = 'Game Draw!!'\r\n        status = <Alert variant=\"danger\" key={this.state.stepNumber}>\r\n            <Alert.Heading>{'Game Draw!!'}</Alert.Heading>\r\n        </Alert>\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={(i)=>this.handleClick(i)}\r\n              winData = {[winner,winPlaces]}\r\n              numRows = {3} \r\n              numCols = {3}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ul>{moves}</ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game  />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return [squares[a],lines[i]];\r\n      }\r\n    }\r\n    return [null,null];\r\n  }"],"sourceRoot":""}